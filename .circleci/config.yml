version: 2.1

orbs:
  golang: cci-orb/golang@volatile    # https://circleci.com/orbs/registry/orb/cci-orb/golang
  codecov: codecov/codecov@volatile  # https://circleci.com/orbs/registry/orb/codecov/codecov

linux: &linux
  executor: golang/stretch
  environment:
    GO111MODULE: "on"
  working_directory: /go/src/github.com/nvim-plugin/nvim-syntax-go
  resource_class: large
darwin: &darwin
  executor:
    name: golang/macos
  working_directory: ~/go/src/github.com/nvim-plugin/nvim-syntax-go

jobs:
  linux:
    <<: *linux
    steps:
      - checkout
      - golang/gomod-download:
          key: "gomod-linux"
      - run:
          name: Install nvim binary
          command: |
            curl -sSL https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz | tar xfz - --strip-components=1 -C '/usr/local'
            nvim --version
      - run:
          name: Run test
          command: |
            make coverage/ci
      - codecov/upload:
          file: "/tmp/artifacts/coverage.out"
          when: on_success
          flags: linux
      - store_artifacts:
          path: /tmp/artifacts
      - store_test_results:
          path: /tmp/artifacts
      - store_test_results:
          path: /tmp/test-results

  darwin:
    <<: *darwin
    steps:
      - run:
          name: Show versions
          command: |
            uname -a
            sw_vers
            xcodebuild -version
            system_profiler SPHardwareDataType
      - checkout
      - golang/homebrew
      - golang/gomod-download:
          key: "gomod-darwin"
          paths: "~/go/pkg/mod"
      - run:
          name: Install nvim binary
          command: |
            sudo mkdir -p /usr/local/libs
            curl -sSL https://github.com/neovim/neovim/releases/download/nightly/nvim-macos.tar.gz | sudo tar xfz - --strip-components=1 -C '/usr/local' || brew install https://github.com/Homebrew/homebrew-core/raw/master/Formula/neovim.rb --HEAD
            nvim --version
      - run:
          name: Test and collect coverages
          environment:
            GO111MODULE: "on"
          command: |
            make coverage/ci
      - codecov/upload:
          file: "/tmp/artifacts/coverage.out"
          flags: darwin
      - store_artifacts:
          path: /tmp/artifacts
      - store_test_results:
          path: /tmp/artifacts
      - store_test_results:
          path: /tmp/test-results

  lint:
    <<: *linux
    steps:
      - checkout
      - golang/gomod-download:
          key: "gomod-linux"
      - run:
          name: Run lint for sources
          command: |
            make lint

workflows:
  version: 2
  workflows:
    jobs:
      - linux
      - darwin
      - lint
